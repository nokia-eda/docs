---
apiVersion: v1
kind: Namespace
metadata:
  name: lldpd-ns
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: lldpd
  namespace: lldpd-ns
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: lldpd
  namespace: lldpd-ns
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: lldpd-cni
subjects:
  - kind: ServiceAccount
    name: lldpd
    namespace: lldpd-ns
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: lldpd-cni
  namespace: lldpd-ns
rules:
  - apiGroups:
      - lldpd.cni.cncf.io
      - security.openshift.io
    resources:
      - ippools
      - securitycontextconstraints
    resourceNames:
      - privileged
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
      - use
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: configmap-lldpd
  namespace: lldpd-ns
data:
  lldpd.sh: |-
    #!/bin/bash
     sleep 1
     intflist=""
     for i in $(ls -d /sys/class/net/e* | grep -v f[0-4]v); do
       intf=`basename $i`
       intflist="$intflist,$intf"
       echo "Adding interface $intf" >> /tmp/ImReady.txt
       echo "Itf: $intf"                             >> /tmp/ImReady.txt
     done
     intflist="${intflist/,}"
     echo "configure system interface pattern $intflist" >> /etc/lldpd.conf
     echo "configure system interface pattern $intflist" >> /tmp/ImReady.txt
     echo "configure lldp portidsubtype ifname" >> /etc/lldpd.conf
     echo "I'm ready: $(date)" >> /tmp/ImReady.txt
     lldpd -dd -l
     while true;  do sleep 1; done
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: lldpd
  namespace: lldpd-ns
  labels:
    tier: node
    app: lldpd
spec:
  selector:
    matchLabels:
      name: lldpd
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        tier: node
        app: lldpd
        name: lldpd
    spec:
      hostNetwork: true
      serviceAccountName: lldpd
      tolerations:
        - operator: Exists
          effect: NoSchedule
      containers:
        - name: lldpd
          image: jdenoy/docker-lldp
          securityContext:
            privileged: true
          env:
            - name: LLDPD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          command:
            - /bin/sh
            - -c
            - --
          args: [ "/lldpd.sh"]
          resources:
            requests:
              cpu: "100m"
              memory: "50Mi"
            limits:
              cpu: "100m"
              memory: "50Mi"
          volumeMounts:
            - name: configmap-lldpd
              mountPath: /lldpd.sh
              readOnly: true
              subPath: lldpd.sh
      volumes:
        - name: configmap-lldpd
          configMap:
            defaultMode: 0500
            name: configmap-lldpd
