apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: connectnetworkdefinitions.connect.eda.nokia.com
spec:
  group: connect.eda.nokia.com
  names:
    kind: ConnectNetworkDefinition
    listKind: ConnectNetworkDefinitionList
    plural: connectnetworkdefinitions
    singular: connectnetworkdefinition
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ConnectNetworkDefinition is the Schema for the connectnetworkdefinition
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ConnectNetworkDefinitionSpec defines the desired state of
              ConnectNetworkDefinition
            properties:
              routers:
                description: 'Important: Run "make" to regenerate code after modifying
                  this file List of routers by name'
                items:
                  properties:
                    name:
                      description: Name of the router
                      type: string
                  required:
                  - name
                  type: object
                type: array
              subnets:
                description: List of Subnets (subnets)
                items:
                  properties:
                    ipMTU:
                      default: 1500
                      description: Set the IP MTU for the RoutedInterface [default=1500]
                      maximum: 9486
                      minimum: 1280
                      type: integer
                    ipv4Addresses:
                      description: List of IPv4 addresses in ip/mask form - e.g. 192.168.0.1/24
                      items:
                        properties:
                          ipPrefix:
                            description: Address and mask to use
                            type: string
                          primary:
                            description: Indicates which address to use as primary
                              for broadcast
                            type: boolean
                        required:
                        - ipPrefix
                        type: object
                      type: array
                    ipv6Addresses:
                      description: List of IPv6 addresses in ip/mask form - e.g. fc00::1/120
                      items:
                        properties:
                          ipPrefix:
                            description: Address and mask to use
                            type: string
                          primary:
                            description: Indicates which address to use as primary
                              for broadcast
                            type: boolean
                        required:
                        - ipPrefix
                        type: object
                      type: array
                    linkedBridgedomain:
                      description: Name of an existing BridgeDomain that this subnet
                        needs to be linked to (Controller managed instead of OpenShift
                        managed)
                      type: string
                    name:
                      description: Name of the Subnet
                      type: string
                    networkAttachmentDefinitions:
                      description: List of NetworkAttachmentDefinition that apply
                        to this Subnet.
                      items:
                        properties:
                          name:
                            description: Name of the network attachment definition
                              along with namespace
                            type: string
                          trunkVlans:
                            description: Overwrite the VLAN of the NAD with the trunkVLAN
                              Single value between 0-4094 support, ranges supported
                              in the format x-y,x-y, or the special keyword any or
                              untagged.
                            items:
                              type: string
                            type: array
                        required:
                        - name
                        type: object
                      type: array
                    router:
                      description: Reference to a Router if the subnet had to be associated
                        to the router. Should not be set if the EdaBridgeDomain value
                        is set
                      type: string
                  required:
                  - name
                  - networkAttachmentDefinitions
                  type: object
                type: array
            type: object
          status:
            description: ConnectNetworkDefinitionStatus defines the observed state
              of ConnectNetworkDefinition
            properties:
              subnets:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file'
                items:
                  properties:
                    linkedBridgedomain:
                      type: string
                    nads:
                      items:
                        properties:
                          name:
                            type: string
                          status:
                            type: string
                          statusDetail:
                            type: string
                          vlans:
                            items:
                              properties:
                                id:
                                  type: string
                                sync:
                                  type: string
                                syncDetails:
                                  type: string
                              required:
                              - id
                              type: object
                            type: array
                        required:
                        - name
                        - statusDetail
                        - vlans
                        type: object
                      type: array
                    name:
                      type: string
                    sync:
                      type: string
                    syncDetails:
                      type: string
                  required:
                  - nads
                  - name
                  type: object
                type: array
            required:
            - subnets
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: controller
    app.kubernetes.io/instance: controller-manager-sa
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: controller
  name: connect-k8s-controller-manager
  namespace: connect-k8s-controller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: controller
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: controller
  name: connect-k8s-leader-election-role
  namespace: connect-k8s-controller
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: connect-k8s-manager-role
rules:
- apiGroups:
  - connect.eda.nokia.com
  resources:
  - connectnetworkdefinitions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - connect.eda.nokia.com
  resources:
  - connectnetworkdefinitions/finalizers
  verbs:
  - update
- apiGroups:
  - connect.eda.nokia.com
  resources:
  - connectnetworkdefinitions/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - k8s.cni.cncf.io
  resources:
  - network-attachment-definitions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - k8s.cni.cncf.io
  resources:
  - network-attachment-definitions/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - nmstate.io
  resources:
  - nodenetworkstates
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - nmstate.io
  resources:
  - nodenetworkstates/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: controller
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: controller
  name: connect-k8s-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: controller
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: controller
  name: connect-k8s-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: controller
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: controller
  name: connect-k8s-leader-election-rolebinding
  namespace: connect-k8s-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: connect-k8s-leader-election-role
subjects:
- kind: ServiceAccount
  name: connect-k8s-controller-manager
  namespace: connect-k8s-controller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: controller
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: controller
  name: connect-k8s-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: connect-k8s-manager-role
subjects:
- kind: ServiceAccount
  name: connect-k8s-controller-manager
  namespace: connect-k8s-controller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: controller
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: controller
  name: connect-k8s-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: connect-k8s-proxy-role
subjects:
- kind: ServiceAccount
  name: connect-k8s-controller-manager
  namespace: connect-k8s-controller
---
apiVersion: v1
data:
  CONNECT_PLUGIN_NAME: ###CHANGE-ME### Change to a proper plugin name 
  NAMESPACE: default
  SKIPTLSVERIFY: "True"
  TLSENABLED: "True"
  HEARTBEAT: 10
kind: ConfigMap
metadata:
  name: connect-k8s-controller-env-config
  namespace: connect-k8s-controller
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: controller
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: controller
    control-plane: controller-manager
  name: connect-k8s-controller-manager-metrics-service
  namespace: connect-k8s-controller
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: controller
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: controller
    control-plane: controller-manager
  name: connect-k8s-controller-manager
  namespace: connect-k8s-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.14.1
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        env:
        - name: HEARTBEAT
          valueFrom:
            configMapKeyRef:
              key: HEARTBEAT
              name: connect-k8s-controller-env-config
        - name: SKIPTLSVERIFY
          valueFrom:
            configMapKeyRef:
              key: SKIPTLSVERIFY
              name: connect-k8s-controller-env-config
        - name: TLSENABLED
          valueFrom:
            configMapKeyRef:
              key: TLSENABLED
              name: connect-k8s-controller-env-config
        - name: CONNECTPLUGINNAME
          valueFrom:
            configMapKeyRef:
              key: CONNECT_PLUGIN_NAME
              name: connect-k8s-controller-env-config
        - name: NAMESPACE
          valueFrom:
            configMapKeyRef:
              key: NAMESPACE
              name: connect-k8s-controller-env-config
        - name: CONNECTHOST
          valueFrom:
            secretKeyRef:
              key: CONNECT_HOST
              name: connect-k8s-controller-env-secret
        - name: CONNECTUSERNAME
          valueFrom:
            secretKeyRef:
              key: CONNECT_USERNAME
              name: connect-k8s-controller-env-secret
        - name: CONNECTPASSWORD
          valueFrom:
            secretKeyRef:
              key: CONNECT_PASSWORD
              name: connect-k8s-controller-env-secret
        image: cr.srlinux.dev/eda/containers/connect-k8s-plugin:24.4.0-a1
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      imagePullSecrets:
        - name: ###CHANGE-ME### Add the dockerregistry secret name if the controller image needs to be pulled to Openshift cluster from a secure registry. Please ensure the dockerregistry secret is created in connect-k8s-controller namespace
      securityContext:
        runAsNonRoot: true
      serviceAccountName: connect-k8s-controller-manager
      terminationGracePeriodSeconds: 10